== FZF ==



| Command                             | Description       |
|-------------------------------------|-------------------|
| nnoremap <Leader>e :Buffers<CR>     | search buffers    |
| nnoremap <Leader>t :Files<CR>       | search files      |
| nnoremap <Leader>r :Tags<CR>        | search tag        |


fzf works in the shell as well and comes with bindings for Zsh, Bash, and the Fish shell. 

In Zsh, I can hit Ctrl-t to instantly fuzzy-find any file in the current directory. 
And since I’ve configured fzf to use ag, it’ll ignore anything excluded by .gitignore

Here’s the snippet from my .zshrc. The FZF environment variables are also used when fzf is called from within Vim:

{{{
# fzf via Homebrew
if [ -e /usr/local/opt/fzf/shell/completion.zsh ]; then
  source /usr/local/opt/fzf/shell/key-bindings.zsh
  source /usr/local/opt/fzf/shell/completion.zsh
fi

# fzf via local installation
if [ -e ~/.fzf ]; then
  _append_to_path ~/.fzf/bin
  source ~/.fzf/shell/key-bindings.zsh
  source ~/.fzf/shell/completion.zsh
fi

# fzf + ag configuration
if _has fzf && _has ag; then
  export FZF_DEFAULT_COMMAND='ag --nocolor -g ""'
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
  export FZF_ALT_C_COMMAND="$FZF_DEFAULT_COMMAND"
  export FZF_DEFAULT_OPTS='
  --color fg:242,bg:236,hl:65,fg+:15,bg+:239,hl+:108
  --color info:108,prompt:109,spinner:108,pointer:168,marker:168
  '
fi
}}}


== ACK.vim ==

| Usage                                    | Description                                                                                      |
| :Ack [options] {pattern} [{directories}] | Search recursively in {directories} (which defaults to the current directory) for the {pattern}. |

Files containing the search term will be listed in the quickfix window, along with the line number of the occurrence, once for each occurrence. <Enter> on a line in this window will open the file and place the cursor on the matching line.

Just like where you use :grep, :grepadd, :lgrep, and :lgrepadd, you can use :Ack, :AckAdd, :LAck, and :LAckAdd respectively. (See :help Ack after installing, or doc/ack.txt in the repo, for more information.)

For more ack help see ack documentation.

Keyboard Shortcuts
The quickfix results window is augmented with these convenience mappings:

| Shortcut   | Description                                                   |
|------------|---------------------------------------------------------------|
| ?          | a quick summary of these keys, repeat to close                |
| o          | to open (same as Enter)                                       |
| O          | to open and close the quickfix window                         |
| go         | to preview file, open but maintain focus on ack.vim results   |
| t          | to open in new tab                                            |
| T          | to open in new tab without moving to it                       |
| h          | to open in horizontal split                                   |
| H          | to open in horizontal split, keeping focus on the results     |
| v          | to open in vertical split                                     |
| gv         | to open in vertical split, keeping focus on the results       |
| q          | to close the quickfix window                                  |
