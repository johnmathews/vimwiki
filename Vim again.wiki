=VIM=
Wrap text to new line after 79 cols. 

Tab	next buffer
Vim * 	open all files in folder (even directories)

Abbreviations are better than using mappings to create expanded text or corrections, because abbreviations pay attention to the chars around the abbrev,

a 	enter insert mode after the cursor
A	enter insert mode at the end of the line
I	enter insert mode at the beginning of the line
R	overtype (like toggle insert)
c	change (retype) command, followed by a movement command
C	like ‘c’ but for the whole line

Spellchecker
:help spell
Set spell spelllang=en_gb 
:set nospell 
]s — move to the next mispelled word
[s — move to the previous mispelled word
zg — add a word to the dictionary
zug — undo the addition of a word to the dictionary
z= — view spelling suggestions for a mispelled word


Nerdtree
m	menu
r	refresh

NerdComment
The following key mappings are provided by default (there is also a menu provided that contains menu items corresponding to all the below mappings):
Most of the following mappings are for normal/visual mode only. The |NERDComInsertComment|mapping is for insert mode only.
* [count]<leader>cc |NERDComComment| Comment out the current line or text selected in visual mode. 
* [count]<leader>cn |NERDComNestedComment| Same as cc but forces nesting. 
* [count]<leader>c<space> |NERDComToggleComment| Toggles the comment state of the selected line(s). If the topmost selected line is commented, all selected lines are uncommented and vice versa. 
* [count]<leader>cm |NERDComMinimalComment| Comments the given lines using only one set of multipart delimiters. 
* [count]<leader>ci |NERDComInvertComment| Toggles the comment state of the selected line(s) individually. 
* [count]<leader>cs |NERDComSexyComment| Comments out the selected lines with a pretty block formatted layout. 
* [count]<leader>cy |NERDComYankComment| Same as cc except that the commented line(s) are yanked first. 
* <leader>c$ |NERDComEOLComment| Comments the current line from the cursor to the end of line. 
* <leader>cA |NERDComAppendComment| Adds comment delimiters to the end of line and goes into insert mode between them. 
* |NERDComInsertComment| Adds comment delimiters at the current cursor position and inserts between. Disabled by default. 
* <leader>ca |NERDComAltDelim| Switches to the alternative set of delimiters. 
* [count]<leader>cl [count]<leader>cb |NERDComAlignedComment| Same as |NERDComComment| except that the delimiters are aligned down the left side (<leader>cl) or both sides (<leader>cb). 
* [count]<leader>cu |NERDComUncommentLine| Uncomments the selected line(s). 
