= (z)Shell =

== General ==

Symbol meanings 
https://github.com/bhilburn/powerlevel9k#vcs


List only dirs that are hidden
	ls -d .*/

ctrl-z -> move process to background
fg -> move the last process back to the foreground
if you have more than 1 process running in the background -> jobs
then -> fg %2

List only dirs
ls -d ./


== Shell vs Terminal ==
* terminal = tty = text input/output environment

* shell = command line interpreter

* console = physical terminal

A shell is the primary interface that users see when they log in, whose primary purpose is to start other programs - In unix circles, shell has specialized to mean a command-line shell,

Terminal - the environment
Shell - the interface to operate CLIs

The division of labor between the terminal and the shell is not completely obvious. Here are their main tasks.
* Input: the terminal converts keys into control sequences (e.g. Left → \e[D). The shell converts control sequences into commands (e.g. \e[D → backward-char).
* Line editing, input history and completion are provided by the shell.
    * The terminal may provide its own line editing, history and completion instead, and only send a line to the shell when it's ready to be executed. The only common terminal that operates in this way is M-x shell in Emacs.
* Output: the shell emits instructions such as “display foo”, “switch the foreground color to green”, “move the cursor to the next line”, etc. The terminal acts on these instructions.
* The prompt is purely a shell concept.
* The shell never sees the output of the commands it runs (unless redirected). Output history (scrollback) is purely a terminal concept.
* Inter-application copy-paste is provided by the terminal (usually with the mouse or key sequences such as Ctrl+Shift+V or Shift+Insert). The shell may have its own internal copy-paste mechanism as well (e.g. Meta+W and Ctrl+Y).
* Job control (launching programs in the background and managing them) is mostly performed by the shell. However, it's the terminal that handles key combinations like Ctrl+C to kill the foreground job and Ctrl+Z to suspend it.
