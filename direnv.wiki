= direnv =

from: https://direnv.net/

*Setup*
ZSH - Add the following line at the end of the ~/.zshrc file:

`eval "$(direnv hook zsh)"`

*Usage*
In some target folder, create a ".envrc" file and add some export(1) directives in it.

Note that the contents of the .envrc file must be valid bash syntax, regardless of the shell you are using. This is because direnv always executes the .envrc with bash (a sort of lowest common denominator of UNIX shells) so that direnv can work across shells. If you try to use some syntax that doesn't work in bash (like zsh's nested expansions), you will run into trouble.

On the next prompt you will notice that direnv complains about the ".envrc" being blocked. This is the security mechanism to avoid loading new files automatically. Otherwise any git repo that you pull, or tar archive that you unpack, would be able to wipe your hard drive once you cd into it.

So here we are pretty sure that it won't do anything bad. Type direnv allow . and watch direnv loading your new environment. Note that direnv edit . is a handy shortcut that opens the file in your $EDITOR and automatically allows it if the file's modification time has changed.

Now that the environment is loaded, you will notice that once you cd out of the directory it automatically gets unloaded. If you cd back into it, it's loaded again. That's the basis of the mechanism that allows you to build cool things.
